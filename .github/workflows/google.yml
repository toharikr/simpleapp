# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created

name: Build and Deploy to GKE

on:
  push:
    branches:
      - 'main'

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT: tonal-justice-348701
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: us-east1-b
  GKE_CLUSTER: cluster-2
  IMAGE: randocats
  REGISTRY_HOSTNAME: us.gcr.io
  DEPLOYMENT_NAME: randocats

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@main

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ secrets.GKE_EMAIL }}
        service_account_key: ${{ secrets.GKE_SA_KEY }}

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker

    # Setup .env file
    - name: Setup .env file
      run: |
        echo GIPHY_API_KEY=${{ secrets.GIPHY_API }} > cmd/.env

    # Build the Docker image
    - name: Build
      run: |
        docker build \
          --tag "$REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE:$GITHUB_SHA" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |
        docker push $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE:$GITHUB_SHA

    # Install helm
    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER \
          --zone $GKE_ZONE \
          --project $GKE_PROJECT
        helm upgrade $GKE_PROJECT $GKE_PROJECT-cluster/ \
          --set randocats.image.tag=$GITHUB_SHA \
          --wait
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
